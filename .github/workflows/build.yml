name: MessengerActive CI/CD

on:
  push:
    branches: [main]
  pull_request:
  workflow_dispatch:
  # Run when a tag is created (optional for manual release)
  release:
    types: [prereleased, released]

jobs:
  build:
    name: Test & Build Windows App
    runs-on: windows-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pyinstaller

      - name: Run tests
        run: pytest -v

      - name: Bump version
        id: version
        run: |
          $version = Get-Content version.txt
          $parts = $version.Split('.')
          $parts[-1] = [int]$parts[-1] + 1
          $newVersion = "$($parts -join '.')"
          Set-Content version.txt $newVersion
          echo "version=$newVersion" >> $env:GITHUB_OUTPUT
          echo "Bumped version to $newVersion"

      - name: Commit version bump
        run: |
          git config --global user.name "github-actions"
          git config --global user.email "actions@github.com"
          git add version.txt
          git commit -m "Bump version to ${{ steps.version.outputs.version }}"
          git push

      - name: Build executable
        run: |
          pyinstaller --noconfirm --onedir --windowed --icon ma_icon.ico main.py

      - name: Create setup (Inno Setup)
        run: |
          echo "Building installer..."
          "C:\Program Files (x86)\Inno Setup 6\ISCC.exe" setup_script.iss

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: MessengerActive-${{ steps.version.outputs.version }}
          path: dist/MessengerActive

  prerelease:
    name: Create Pre-Release
    needs: build
    runs-on: windows-latest
    if: github.ref == 'refs/heads/main'

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Download build artifact
        uses: actions/download-artifact@v4
        with:
          name: MessengerActive-${{ needs.build.outputs.version }}
          path: dist/MessengerActive

      - name: Create Pre-release on GitHub
        uses: softprops/action-gh-release@v2
        with:
          tag_name: v${{ needs.build.outputs.version }}
          name: "MessengerActive v${{ needs.build.outputs.version }}"
          prerelease: true
          files: dist/MessengerActive/**
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
